#include<bits/stdc++.h>
using namespace std;
#define  optimize()  ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define  ll          long long int
#define  ull         unsigned long long int
#define  pb          push_back
#define  all(v)      v.begin(),v.end()
#define  rall(v)     v.rbegin(),v.rend()
#define  endl        "\n"
#define  lcm(a,b)    a/__gcd(a,b)*b
#define  mod         (ll)998244353
#define  gcd(a,b)    __gcd(a,b)
#define  Max(a,b,c)  max(max(a,b),c)
#define  Min(a,b,c)  min(min(a,b),c)
#define  pii         pair<ll,ll>
#define  S           second
#define  F           first
void answer();
const ll mx=1e6+123;
int dx[]={0,0,1,-1};
int dy[]={1,-1,0,0};
ll b;
ll cnt[mx];
bool cmpr(pii x,pii y){
  if(x.F/b==y.F/b)return (x.S<=y.S);
  return (x.F<=y.F);
}
int main()
{
    optimize();
     int t=1;
    //cin>>t;
    int tt=t;
     while(t--){
        // cout<<"Case "<<tt-t<<": ";
        answer();
     }
     return 0;
}
void answer()
{
    ll n;
    cin>>n;
    vector<ll>v(n);
    for(int i=0;i<n;i++)cin>>v[i];
    vector<pii>query;
    vector<pii>a;
    int q;
    cin>>q;
    b=sqrt(n);
    while(q--){
        ll x,y;
        cin>>x>>y;
        x--;
        y--;
        query.pb({x,y});
        a.pb({x,y});
    }
    a.pb({n,n});
    sort(a.begin(),a.end(),cmpr);
    map<pii,ll>mp;
    ll c=0;
    memset(cnt,0,sizeof(cnt));
    ll lp=a[0].F,rp=a[0].S;
    for(int i=lp;i<=rp;i++){
       if(cnt[v[i]]==0)c++;
       cnt[v[i]]++;
    }
    mp[{lp,rp}]=c;
    for(int i=1;i<a.size()-1;i++){
         ll x=a[i].F;
         ll y=a[i].S;
         while(lp!=x){
            if(x>lp){
                ll val=v[lp];
                cnt[val]--;
                if(cnt[val]==0)c--;
                lp++;
            }
            else {
                lp--;
                ll val=v[lp];
                if(cnt[val]==0)c++;
                cnt[val]++;
            }
         }
         while(rp!=y){
            if(y>rp){
                rp++;
                ll val=v[rp];
                if(cnt[val]==0)c++;
                cnt[val]++;
            }
            else {
                ll val=v[rp];
                rp--;
                 cnt[val]--;
                 if(cnt[val]==0)c--;
            }
         }
         mp[{x,y}]=c;
    }
    for(auto u:query){
        cout<<mp[{u.F,u.S}]<<endl;
    }
}
